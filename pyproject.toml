[build-system]
requires = [
  "setuptools >= 61",
  "setuptools_scm[toml] >= 8",
]
build-backend = 'setuptools.build_meta'

[project]
name = "geoPFA"
dynamic = ["version"]
description = "Geothermal Play Fairway Analysis"
readme = "README.md"
authors = [
  {name = "Nicole Taverna", email = "nicole.taverna@nrel.gov"}
  ]
maintainers = [
  {name = "Nicole Taverna", email = "nicole.taverna@nrel.gov"}
  ]
keywords=["geothermal", "pfa"]
requires-python = ">= 3.10"
classifiers=[
        "Development Status :: 4 - Beta",
        "Intended Audience :: Science/Research",
        # "License :: OSI Approved :: BSD License",
        "Natural Language :: English",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
    ]
dependencies = [
  "iapws>=1.5.4",
  "ipython>=8.29.0",
  "joblib>=1.4.2",
  "matplotlib>=3.1",
  "networkx>=2.3",
  "notebook",
  "numpy>=1.16",
  "pandas>=1.0",
  "psutil>=6.1.0",
  "pytest>=5.2",
  "seaborn>=0.13.2",
  "geopandas>=1.0.1",
  "rasterio>=1.4.2",
  "NREL-rex>=0.2.42",
  "shapely>=2.0.6",
  "scipy>=1.14.1",
  "contextily>=1.6.2",
  "pathos>=0.3.3",
  "pykrige>=1.7",
  "geostatspy>=0.0.72,<0.0.73",
]
[project.optional-dependencies]
dev = [
  "build>=0.10",
  "twine>=5.1",
  "pre-commit>=4.0",
]
doc = [
  "ghp-import>=2.1",
  "numpydoc>=1.6",
  "make>=0.1",
  "myst-parser>=3.0.1",
  "pandoc>=2.3",
  "pydata-sphinx-theme>=0.15",
  "sphinx>=8.1.3,<9",
  "sphinx-click>=5.1",
  "sphinx-copybutton>=0.5",
  "sphinx-tabs>=3.4",
]
test = [
  "pytest>=7.0",
  "pytest-cases>=3.8.6,<4",
  "pytest-cov>=3.0",
  "pytest-profiling>=1.7.0,<2",
  "pytest-xdist>=3.0",
  "tox>=4.0",
  "hypothesis>=6.0",
]

[project.urls]
homepage = "https://https://github.com/GeothermalExplorationTools/geopfa2d"
documentation = "https://https://github.com/GeothermalExplorationTools/geopfa2d"
repository = "https://https://github.com/GeothermalExplorationTools/geopfa2d"

[tool.setuptools]
packages = ["geoPFA"]

[tool.setuptools_scm]
version_file = "geoPFA/_version.py"

[tool.pixi.project]
channels = ["conda-forge", "anaconda", "main"]
platforms = ["osx-arm64", "linux-64", "win-64"]

[tool.pixi.tasks]
doc-html = { cmd = "make html", cwd = "docs"}

[tool.pixi.environments]
default = { solve-group = "default" }
dev = { features = ["dev", "doc", "test"], solve-group = "default" }
doc = { features = ["doc"], solve-group = "default" }
test = { features = ["test"], solve-group = "default" }

[tool.pixi.pypi-dependencies]
geoPFA = { path = ".", editable = true }

[tool.pixi.dependencies]
contextily = "==1.6.2"
geopandas = "==1.0.1"
joblib = "==1.4.2"
jupyterlab = ">=4.3.4,<5"
iapws = "==1.5.4"
networkx = "==3.4.2"
matplotlib = "==3.9.2"
numpy = "==2.1.3"
pandas = "==2.2.3"
pathos = "==0.3.3"
psutil = "==6.1.0"
rasterio = "==1.4.2"
scipy = "==1.14.1"
seaborn = "==0.13.2"
shapely = "==2.0.6"
pykrige = ">=1.7.2,<2"

[tool.pixi.feature.doc.dependencies]
sphinx = ">=8.2.3,<9"

[tool.pixi.feature.test.dependencies]
pytest = ">=8.3.4,<9"
pylint = ">=3.3.3,<4"
hypothesis = ">=6.129.3,<7"

[tool.pixi.feature.dev.dependencies]
ipython = "==8.29.0"
pre-commit = ">=4.0.1,<5"
ruff = ">=0.9.2,<0.10"

[tool.ruff]
line-length = 79

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.ruff.lint]
preview = true
select = [
  "A", # flake8-builtins
  "B", # flake8-bugbear
  "ARG", # flake8-unused-arguments
  "BLE", # flake8-blind-except
  "C4", # flake8-comprehensions
  "C90", # mccabe
  "COM", # flake8-commas
  # "D", # pydocstyle
  # "E", # pycodestyle
  "EM", # flake8-errmsg
  "F", # Pyflakes
  # "FURB", # refurb
  "FLY", #  flynt
  "G", # flake8-logging-format
  "I", # isort
  "INP", # flake8-no-pep420
  "ISC", # flake8-implicit-str-concat
  "LOG", # flake8-logging
  # "N", # pep8-naming
  "NPY", # numpy-specific
  # "PD", # pandas-vet
  # "PERF", # Perflint
  "PIE", # flake8-pie
  # "PL", # Pylint
  # "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  # "Q", # flake8-quotes
  # "RET", # flake8-return
  "RSE", # flake8-raise
  # "RUF", # Ruff-specific rules
  "S", # flake8-bandit
  "SLF", # flake8-self
  # "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports (absolute imports)
  # "TRY", # tryceratops
  "UP", # pyupgrade
  # "W", # Warning
  ]
ignore = [
  "A001", # Shadowing built-in
  "ARG004",  # Unused argument
  "B904",  # Use of assert
  "B905",  # Use of assert
  "BLE001",  # Using bare except
  "C901",  # McCabe complexity
  "COM812",  # Missing trailing comma
  "D200",  # One-line docstring should fit on one line with quotes
  "D205",  # 1 blank line required between summary line and description
  "D400",  # First line should end with a period
  "D401",  # First line should be in imperative mood
  "D406",  # Section name should end with a newline
  "D409",  # Section underline should match the length of its name
  "D410",  # Missing blank line after section
  "D411",  # Missing blank line before section
  "E226",  # Missing whitespace around arithmetic operator
  "E231",  # Missing whitespace after ','
  "E402",  # Module level import not at top of file
  "E501",  # Line too long
  "E702",  # Multiple statements on one line
  "EM101", # Exception must not use a string literal
  "EM102", # Exception must not use an f-string literal, assign to variable firs
  "F401",  # Unused import
  "F811",  # Redefinition of unused
  "F841",  # Unused variable
  "I001",  # isort found an import in the wrong position
  "S101", # Use of assert
  "UP009", # UTF-8 encoding declaration is unnecessary
  "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 72

[tool.ruff.lint.pydocstyle]
convention = "numpy"
